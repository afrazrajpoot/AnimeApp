{"ast":null,"code":"const CLASS_PART_SEPARATOR = '-';\n\nfunction createClassUtils(config) {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n\n  function getClassGroupId(className) {\n    const classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n\n    return conflicts;\n  }\n\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n}\n\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(_ref => {\n    let {\n      validator\n    } = _ref;\n    return validator(classRest);\n  })?.classGroupId;\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\n\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\n * Exported for testing only\n */\n\n\nfunction createClassMap(config) {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(_ref2 => {\n    let [classGroupId, classGroup] = _ref2;\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\n\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n\n    Object.entries(classDefinition).forEach(_ref3 => {\n      let [key, classGroup] = _ref3;\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\n\nfunction getPart(classPartObject, path) {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\n\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\n\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n\n  return classGroupEntries.map(_ref4 => {\n    let [classGroupId, classGroup] = _ref4;\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(_ref5 => {\n          let [key, value] = _ref5;\n          return [prefix + key, value];\n        }));\n      }\n\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n} // LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\n\n\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n\n  return {\n    get(key) {\n      let value = cache.get(key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n\n  };\n}\n\nconst IMPORTANT_MODIFIER = '!';\n\nfunction createSplitModifiers(config) {\n  const separator = config.separator;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length; // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n\n  return function splitModifiers(className) {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n}\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\n\n\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n}\n\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config),\n    ...createClassUtils(config)\n  };\n}\n\nconst SPLIT_CLASSES_REGEX = /\\s+/;\n\nfunction mergeClassList(classList, configUtils) {\n  const {\n    splitModifiers,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n\n  const classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(originalClassName => {\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = splitModifiers(originalClassName);\n    let classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n\n    if (!classGroupId) {\n      if (!maybePostfixModifierPosition) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n\n      classGroupId = getClassGroupId(baseClassName);\n\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n\n      hasPostfixModifier = false;\n    }\n\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId,\n      classGroupId,\n      originalClassName,\n      hasPostfixModifier\n    };\n  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(parsed => {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n\n    const {\n      modifierId,\n      classGroupId,\n      hasPostfixModifier\n    } = parsed;\n    const classId = modifierId + classGroupId;\n\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(group => classGroupsInConflict.add(modifierId + group));\n    return true;\n  }).reverse().map(parsed => parsed.originalClassName).join(' ');\n}\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\n\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n\n  let resolvedValue;\n  let string = '';\n\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction createTailwindMerge(createConfigFirst) {\n  for (var _len = arguments.length, createConfigRest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfigRest[_key - 1] = arguments[_key];\n  }\n\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\n\nfunction fromTheme(key) {\n  const themeGetter = theme => theme[key] || [];\n\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/; // Shadow always begins with x and y offset separated by underscore optionally prepended by inset\n\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\n\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\n}\n\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\n\nfunction isNumber(value) {\n  return Boolean(value) && !Number.isNaN(Number(value));\n}\n\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\n\nfunction isInteger(value) {\n  return Boolean(value) && Number.isInteger(Number(value));\n}\n\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\n\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\n\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\n\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\n\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, sizeLabels, isNever);\n}\n\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\n\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\n\nfunction isArbitraryImage(value) {\n  return getIsArbitraryValue(value, imageLabels, isImage);\n}\n\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\n\nfunction isAny() {\n  return true;\n}\n\nfunction getIsArbitraryValue(value, label, testValue) {\n  const result = arbitraryValueRegex.exec(value);\n\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n\n    return testValue(result[2]);\n  }\n\n  return false;\n}\n\nfunction isLengthOnly(value) {\n  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n  return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\n}\n\nfunction isNever() {\n  return false;\n}\n\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\n\nfunction isImage(value) {\n  return imageRegex.test(value);\n}\n\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nfunction getDefaultConfig() {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n\n  const getNumber = () => [isNumber, isArbitraryNumber];\n\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumber(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\n\n\nfunction mergeConfigs(baseConfig, _ref6) {\n  let {\n    cacheSize,\n    prefix,\n    separator,\n    extend = {},\n    override = {}\n  } = _ref6;\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n\n  return baseConfig;\n}\n\nfunction overrideProperty(baseObject, overrideKey, overrideValue) {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n}\n\nfunction overrideConfigProperties(baseObject, overrideObject) {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n}\n\nfunction mergeConfigProperties(baseObject, mergeObject) {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n}\n\nfunction extendTailwindMerge(configExtension) {\n  for (var _len2 = arguments.length, createConfig = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    createConfig[_key2 - 1] = arguments[_key2];\n  }\n\n  return typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\n}\n\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };","map":{"version":3,"mappings":"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","names":["CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","prefixedClassGroup","fromEntries","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","splitModifiers","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","sort","createConfigUtils","SPLIT_CLASSES_REGEX","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","Boolean","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","mergeClassList","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","Number","isNaN","isArbitraryNumber","isInteger","isPercent","endsWith","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","float","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","size","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","select","fill","stroke","sr","mergeConfigs","baseConfig","extend","override","overrideProperty","configKey","overrideConfigProperties","mergeConfigProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"sources":["E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\class-utils.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\lru-cache.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\modifier-utils.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\config-utils.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\merge-classlist.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\tw-join.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\create-tailwind-merge.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\from-theme.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\validators.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\default-config.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\merge-configs.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\extend-tailwind-merge.ts","E:\\anime\\AnimeApp\\node_modules\\tailwind-merge\\src\\lib\\tw-merge.ts"],"sourcesContent":["import {\n    ClassGroup,\n    ClassValidator,\n    Config,\n    GenericClassGroupIds,\n    GenericConfig,\n    GenericThemeGroupIds,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: GenericClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: GenericClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: GenericConfig) {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(\n        classGroupId: GenericClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): GenericClassGroupIds | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config<GenericClassGroupIds, GenericThemeGroupIds>) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup<GenericThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: GenericClassGroupIds,\n    theme: ThemeObject<GenericThemeGroupIds>,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { GenericConfig } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: GenericConfig) {\n    const separator = config.separator\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n","import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { GenericConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: GenericConfig) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const {\n                    modifiers,\n                    hasImportantModifier,\n                    baseClassName,\n                    maybePostfixModifierPosition,\n                } = splitModifiers(originalClassName)\n\n                let classGroupId = getClassGroupId(\n                    maybePostfixModifierPosition\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\n                        : baseClassName,\n                )\n\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n\n                if (!classGroupId) {\n                    if (!maybePostfixModifierPosition) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    classGroupId = getClassGroupId(baseClassName)\n\n                    if (!classGroupId) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    hasPostfixModifier = false\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                    hasPostfixModifier,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { GenericConfig } from './types'\n\ntype CreateConfigFirst = () => GenericConfig\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as GenericConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme<\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport function isLength(value: string) {\n    return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value)\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isNumber(value: string) {\n    return Boolean(value) && !Number.isNaN(Number(value))\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\nexport function isInteger(value: string) {\n    return Boolean(value) && Number.isInteger(Number(value))\n}\n\nexport function isPercent(value: string) {\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, sizeLabels, isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nconst imageLabels = new Set(['image', 'url'])\n\nexport function isArbitraryImage(value: string) {\n    return getIsArbitraryValue(value, imageLabels, isImage)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nexport function isAny() {\n    return true\n}\n\nfunction getIsArbitraryValue(\n    value: string,\n    label: string | Set<string>,\n    testValue: (value: string) => boolean,\n) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return typeof label === 'string' ? result[1] === label : label.has(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n\nfunction isImage(value: string) {\n    return imageRegex.test(value)\n}\n","import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing] as const\n    const getSpacingWithArbitrary = () => [isArbitraryValue, spacing] as const\n    const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        separator: ':',\n        theme: {\n            colors: [isAny],\n            spacing: [isLength, isArbitraryLength],\n            blur: ['none', '', isTshirtSize, isArbitraryValue],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n            borderSpacing: getSpacingWithArbitrary(),\n            borderWidth: getLengthWithEmptyAndArbitrary(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: getSpacingWithArbitrary(),\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAutoAndArbitrary(),\n            margin: getSpacingWithAutoAndArbitrary(),\n            opacity: getNumber(),\n            padding: getSpacingWithArbitrary(),\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: getSpacingWithArbitrary(),\n            translate: getSpacingWithArbitrary(),\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger, isArbitraryValue] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: getSpacingWithAutoAndArbitrary() }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger, isArbitraryValue] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [\n                {\n                    col: [\n                        'auto',\n                        { span: ['full', isInteger, isArbitraryValue] },\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [\n                { row: ['auto', { span: [isInteger, isArbitraryValue] }, isArbitraryValue] },\n            ],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [\n                {\n                    w: [\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svw',\n                        'lvw',\n                        'dvw',\n                        isArbitraryValue,\n                        spacing,\n                    ],\n                },\n            ],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit'] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        isArbitraryValue,\n                        spacing,\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [\n                {\n                    h: [\n                        isArbitraryValue,\n                        spacing,\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svh',\n                        'lvh',\n                        'dvh',\n                    ],\n                },\n            ],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [\n                { 'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [\n                { 'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/size\n             */\n            size: [{ size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        'none',\n                        'tight',\n                        'snug',\n                        'normal',\n                        'relaxed',\n                        'loose',\n                        isLength,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                { decoration: ['auto', 'from-font', isLength, isArbitraryLength] },\n            ],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength, isArbitraryValue] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: getSpacingWithArbitrary() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength, isArbitraryValue] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength, isArbitraryLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmptyAndArbitrary() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: ['auto', 'none', 'manipulation'],\n                },\n            ],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [\n                {\n                    'touch-pan': ['x', 'left', 'right'],\n                },\n            ],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [\n                {\n                    'touch-pan': ['y', 'up', 'down'],\n                },\n            ],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n","import { ConfigExtension, GenericConfig } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs<ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: GenericConfig,\n    {\n        cacheSize,\n        prefix,\n        separator,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'separator', separator)\n\n    for (const configKey in override) {\n        overrideConfigProperties(\n            baseConfig[configKey as keyof typeof override],\n            override[configKey as keyof typeof override],\n        )\n    }\n\n    for (const key in extend) {\n        mergeConfigProperties(\n            baseConfig[key as keyof typeof extend],\n            extend[key as keyof typeof extend],\n        )\n    }\n\n    return baseConfig\n}\n\nfunction overrideProperty<T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nfunction overrideConfigProperties(\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nfunction mergeConfigProperties(\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            const mergeValue = mergeObject[key]\n\n            if (mergeValue !== undefined) {\n                baseObject[key] = (baseObject[key] || []).concat(mergeValue)\n            }\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds, GenericConfig } from './types'\n\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\n\nexport function extendTailwindMerge<\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n"]},"metadata":{},"sourceType":"module"}